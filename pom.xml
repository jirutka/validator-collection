<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>cz.jirutka.maven</groupId>
        <artifactId>groovy-parent</artifactId>
        <version>1.3.2</version>
    </parent>


    <!--//////////////////// ABOUT ////////////////////-->

    <groupId>cz.jirutka.validator</groupId>
    <artifactId>validator-collection</artifactId>
    <version>2.2.0</version>
    <packaging>jar</packaging>

    <name>validator-collection</name>
    <description>Universal bean validator for collection of simple types.</description>
    <url>https://github.com/jirutka/validator-collection</url>
    <inceptionYear>2013</inceptionYear>

    <developers>
        <developer>
            <name>Jakub Jirutka</name>
            <email>jakub@jirutka.cz</email>
            <organization>CTU in Prague</organization>
            <organizationUrl>http://www.cvut.cz</organizationUrl>
        </developer>
    </developers>


    <!--//////////////////// DISTRIBUTION ////////////////////-->

    <licenses>
        <license>
            <name>MIT</name>
            <url>http://opensource.org/licenses/MIT</url>
        </license>
    </licenses>

    <scm>
        <url>https://github.com/jirutka/validator-collection</url>
        <connection>scm:git:git@github.com:jirutka/validator-collection.git</connection>
    </scm>

    <ciManagement>
        <system>travis</system>
        <url>https://travis-ci.org/jirutka/validator-collection</url>
    </ciManagement>

    <issueManagement>
        <system>github</system>
        <url>https://github.com/jirutka/validator-collection/issues</url>
    </issueManagement>


    <!--//////////////////// DEPENDENCIES ////////////////////-->

    <dependencies>
        <!-- JSR-330 Annotations -->
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>1</version>
        </dependency>

        <!-- JSR-349 Bean Validator -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <!-- Note: Minimal supported version is 4.3.0.Final. -->
            <version>5.4.1.Final</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.1</version>
        </dependency>

        <!-- Required by hibernate-validator -->
        <dependency>
            <groupId>javax.el</groupId>
            <artifactId>javax.el-api</artifactId>
            <version>2.2.4</version>
            <scope>provided</scope>
        </dependency>

        <!-- Required by hibernate-validator -->
        <dependency>
            <groupId>org.glassfish.web</groupId>
            <artifactId>javax.el</artifactId>
            <version>2.2.4</version>
            <scope>provided</scope>
        </dependency>

        <!--//// Test ////-->

        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-core</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Needed only for testing @EachSafeHtml -->
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.8.2</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>


    <!--//////////////////// PROFILES ////////////////////-->

    <profiles>        <!--            Profile to run integration tests with different version of Hibernate Validator then the            compile version.        -->        <profile>            <id>test-different-hv-version</id>            <properties>                <!-- Should be set from CLI: -Dhv.version.test=VERSION -->                <hv.version.test></hv.version.test>                <dependency.directory>${project.build.directory}/dependency</dependency.directory>            </properties>            <build>                <plugins>                    <plugin>                        <artifactId>maven-dependency-plugin</artifactId>                        <executions>                            <execution>                                <goals>                                    <goal>copy</goal>                                </goals>                                <configuration>                                    <outputDirectory>${dependency.directory}</outputDirectory>                                    <artifactItems>                                        <item>                                            <groupId>org.hibernate</groupId>                                            <artifactId>hibernate-validator</artifactId>                                            <version>${hv.version.test}</version>                                        </item>                                    </artifactItems>                                </configuration>                            </execution>                        </executions>                    </plugin>                    <plugin>                        <artifactId>maven-failsafe-plugin</artifactId>                        <configuration>                            <classpathDependencyExcludes>                                <exclude>org.hibernate:hibernate-validator</exclude>                            </classpathDependencyExcludes>                            <additionalClasspathElements>                                <element>${dependency.directory}/hibernate-validator-${hv.version.test}.jar</element>                            </additionalClasspathElements>                        </configuration>                    </plugin>                </plugins>            </build>        </profile><profile>
<id>jdk8</id>
<activation>
	<jdk>1.8</jdk>
</activation>
<build>
	<plugins>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<configuration>
				<fork>true</fork>
				<compilerArgs combine.children="append">
					<arg>-J-Xbootclasspath/p:${settings.localRepository}/com/google/errorprone/javac/${javac.version}/javac-${javac.version}.jar</arg>
				</compilerArgs>
			</configuration>
		</plugin>
	</plugins>
</build>
</profile>
    </profiles>
<properties>
<javac.version>9+181-r4173-1</javac.version>
</properties>
<build>
<plugins>
<plugin>
<groupId>org.apache.maven.plugins</groupId>
<artifactId>maven-compiler-plugin</artifactId>
<version>3.5.1</version>
<configuration>
	<source>8</source>
	<target>8</target>
	<showWarnings>true</showWarnings>
	<compilerArgs>
		<arg>-XDcompilePolicy=simple</arg>
		<arg>-Xplugin:ErrorProne -XepAllErrorsAsWarnings -Xep:AndroidJdkLibsChecker:ERROR -Xep:AssistedInjectAndInjectOnSameConstructor:ERROR -Xep:AutoFactoryAtInject:ERROR -Xep:ClassName:ERROR -Xep:ComparisonContractViolated:ERROR -Xep:DepAnn:ERROR -Xep:DivZero:ERROR -Xep:EmptyIf:ERROR -Xep:FuzzyEqualsShouldNotBeUsedInEqualsMethod:ERROR -Xep:InjectInvalidTargetingOnScopingAnnotation:ERROR -Xep:InjectMoreThanOneQualifier:ERROR -Xep:InjectScopeAnnotationOnInterfaceOrAbstractClass:ERROR -Xep:InjectScopeOrQualifierAnnotationRetention:ERROR -Xep:InjectedConstructorAnnotations:ERROR -Xep:InsecureCryptoUsage:ERROR -Xep:IterablePathParameter:ERROR -Xep:JMockTestWithoutRunWithOrRuleAnnotation:ERROR -Xep:Java7ApiChecker:ERROR -Xep:JavaxInjectOnFinalField:ERROR -Xep:LockMethodChecker:ERROR -Xep:LongLiteralLowerCaseSuffix:ERROR -Xep:NoAllocation:ERROR -Xep:NumericEquality:ERROR -Xep:ParameterPackage:ERROR -Xep:RestrictTo:ERROR -Xep:StaticOrDefaultInterfaceMethod:ERROR -Xep:UnlockMethod:ERROR -Xep:AnnotateFormatMethod:ERROR -Xep:AnnotationPosition:ERROR -Xep:AssertFalse:ERROR -Xep:AssistedInjectAndInjectOnConstructors:ERROR -Xep:BinderIdentityRestoredDangerously:ERROR -Xep:BindingToUnqualifiedCommonType:ERROR -Xep:ConstructorInvokesOverridable:ERROR -Xep:ConstructorLeaksThis:ERROR -Xep:EmptyTopLevelDeclaration:ERROR -Xep:EqualsBrokenForNull:ERROR -Xep:ExpectedExceptionChecker:ERROR -Xep:FunctionalInterfaceClash:ERROR -Xep:HardCodedSdCardPath:ERROR -Xep:InconsistentOverloads:ERROR -Xep:InvalidParam:ERROR -Xep:InvalidTag:ERROR -Xep:InvalidThrows:ERROR -Xep:MissingDefault:ERROR -Xep:MutableMethodReturnType:ERROR -Xep:NoFunctionalReturnType:ERROR -Xep:NonCanonicalStaticMemberImport:ERROR -Xep:NullableDereference:ERROR -Xep:PrimitiveArrayPassedToVarargsMethod:ERROR -Xep:ProtosAsKeyOfSetOrMap:ERROR -Xep:ProvidesFix:ERROR -Xep:QualifierWithTypeUse:ERROR -Xep:RedundantThrows:ERROR -Xep:ReturnFromVoid:ERROR -Xep:StaticQualifiedUsingExpression:ERROR -Xep:StringEquality:ERROR -Xep:SystemExitOutsideMain:ERROR -Xep:TestExceptionChecker:ERROR -Xep:UnnecessaryDefaultInEnumSwitch:ERROR -Xep:Unused:ERROR -Xep:UnusedException:ERROR -Xep:Var:ERROR -Xep:BooleanParameter:ERROR -Xep:ClassNamedLikeTypeParameter:ERROR -Xep:ConstantField:ERROR -Xep:EmptySetMultibindingContributions:ERROR -Xep:ExpectedExceptionRefactoring:ERROR -Xep:FieldCanBeFinal:ERROR -Xep:FieldMissingNullable:ERROR -Xep:ImmutableRefactoring:ERROR -Xep:LambdaFunctionalInterface:ERROR -Xep:MethodCanBeStatic:ERROR -Xep:MixedArrayDimensions:ERROR -Xep:MultiVariableDeclaration:ERROR -Xep:MultipleTopLevelClasses:ERROR -Xep:MultipleUnaryOperatorsInMethodCall:ERROR -Xep:PackageLocation:ERROR -Xep:ParameterComment:ERROR -Xep:ParameterNotNullable:ERROR -Xep:PrivateConstructorForNoninstantiableModule:ERROR -Xep:PrivateConstructorForUtilityClass:ERROR -Xep:RemoveUnusedImports:ERROR -Xep:ReturnMissingNullable:ERROR -Xep:ScopeOnModule:ERROR -Xep:SwitchDefault:ERROR -Xep:TestExceptionRefactoring:ERROR -Xep:ThrowsUncheckedException:ERROR -Xep:TryFailRefactoring:ERROR -Xep:TypeParameterNaming:ERROR -Xep:UngroupedOverloads:ERROR -Xep:UnnecessarySetDefault:ERROR -Xep:UnnecessaryStaticImport:ERROR -Xep:UseBinds:ERROR -Xep:WildcardImport:ERROR</arg>
	</compilerArgs>
	<annotationProcessorPaths>
		<path>
			<groupId>com.google.errorprone</groupId>
			<artifactId>error_prone_core</artifactId>
			<version>2.3.2</version>
		</path>
	</annotationProcessorPaths>
</configuration>
</plugin>
</plugins>
</build>
</project>
